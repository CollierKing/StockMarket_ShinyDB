xpathtext
fvResult <- readHTMLTable(url)
fvResult[1]
fvResult[[1]]
fvResult[[2]]
fvResult[[3]]
fvResult[[4]]
fvResult[1]
fvResult[2]
fvResult[3]
fvResult[4]
fvResult[5]
fvResult <- read_html(url)
xpathtext <- "/html/body/table[2]/tbody/tr[1]/td[1]/table[2]/tbody/tr[9]/td[1]"
url <- paste0("http://www.nasdaq.com/symbol/",ticker,"/revenue-eps/")
incidents <- url %>% read_html() %>%
html_nodes(xpath = xpathtext) %>%
html_table() %>% data.frame()
incidents <- url %>% read_html() %>%
html_node(xpath = xpathtext) %>%
html_table() %>% data.frame()
incidents <- url %>% read_html() %>%
html_nodes(xpathtext) %>%
html_table() %>% data.frame()
xpathtext <- "html/body/table[2]/tbody/tr[1]/td[1]/table[2]/tbody/tr[9]/td[1]"
url <- paste0("http://www.nasdaq.com/symbol/",ticker,"/revenue-eps/")
incidents <- url %>% read_html() %>%
html_nodes(xpathtext) %>%
html_table() %>% data.frame()
incidents <- url %>% read_html() %>%
html_nodes("table.ipos") %>%
html_table() %>% data.frame()
incidents <- url %>% read_html() %>%
html_nodes("body > table:nth-child(10) > tbody > tr:nth-child(1) > td:nth-child(1) > table.ipos > tbody > tr:nth-child(9) > td:nth-child(1)") %>%
html_table() %>% data.frame()
library(Quandl)
mydata = Quandl.datatable("ZACKS/FC", ticker="AAPL")
Quandl.api_key(" qSAUD4UYgpSUz_Bbxv6v")
mydata = Quandl.datatable("ZACKS/FC", ticker="AAPL")
View(mydata)
fundamentals = Quandl.datatable("ZACKS/FC", ticker="AAPL")
fundamentals <- fundamentals[fundamentals$per_type=="Q",]
View(fundamentals)
fundamentals$per_end_date <- as.Date(fundamentals$per_end_date)
fundamentals <- fundamentals %>% arrange(desc(per_end_date))
fundamentals <- fundamentals %>% arrange(per_end_date)
ticker <- 'aapl'
input <- tq_get(ticker, get = "stock.prices", from = start, to = end)
input <- tq_get(ticker, get = "stock.prices", from = start, to = end)
mondays = as.POSIXlt(input$date)$wday == 1
tuesdays = as.POSIXlt(input$date)$wday == 2
wednesdays = as.POSIXlt(input$date)$wday == 3
thursdays = as.POSIXlt(input$date)$wday == 4
fridays = as.POSIXlt(input$date)$wday == 5
indx_mondays <- c(0, which(mondays))
indx_tuesdays <- c(0, which(tuesdays))
indx_wednesdays <- c(0, which(wednesdays))
indx_thursdays <- c(0, which(thursdays))
indx_fridays <- c(0, which(fridays))
open <- input[,1]
open$index = 1:nrow(open)
input$mondays <- indx_mondays[match(open$index,indx_mondays)]
input$tuesdays <- indx_tuesdays[match(open$index,indx_tuesdays)]
input$wednesdays <- indx_wednesdays[match(open$index,indx_wednesdays)]
input$thursdays <- indx_thursdays[match(open$index,indx_thursdays)]
input$fridays <- indx_fridays[match(open$index,indx_fridays)]
input$weekday <- ifelse(!is.na(input$mondays),1,
ifelse(!is.na(input$tuesdays),2,
ifelse(!is.na(input$wednesdays),3,
ifelse(!is.na(input$thursdays),4,
ifelse(!is.na(input$fridays),5,NA)))))
input$week_num <- NA
week = 0
try(for (i in 1:nrow(input)){
if(input$weekday[i]>input$weekday[i+1]){
week = week + 1
input$week_num[i+1] <- week
}  else {
input$week_num[i+1] <- week
}
},silent=FALSE)
input$week_num[1] <- input$week_num[2]
input %>% group_by(week_num) %>%
summarise(
size = n(),
date = first(date),
open = first(open),
low = min(low),
high = max(high),
close = last(close),
adjusted = last(adjusted),
volume = sum(volume)
) -> input
try(input$ma50 <- SMA(input$close,50),silent=TRUE)
try(input$ma21 <- SMA(input$close,21),silent=TRUE)
try(input$ma9 <- SMA(input$close,9),silent=TRUE)
try(bbands <- as.data.frame(BBands(input$close, n=20,sd=2)),silent=TRUE)
try(bbands <- bbands[,c("up","dn")],silent = TRUE)
try(input <- cbind(input,bbands),silent = TRUE)
input$pos_neg <- ifelse(input$adjusted>lag(input$adjusted,1),"red","green")
try(input$RSI <- RSI(input$adjusted))
try(macd <- as.data.frame(MACD(input$adjusted)))
try(input <- cbind(input,macd),silent = TRUE)
try(input$macd_delt <- input$macd-input$signal)
p1 <- ggplot(input, aes(x=date, ymin=low, ymax=high, lower=pmin(open,close), upper=pmax(open,close), fill=open<close, group=1, middle=pmin(open,close))) + geom_boxplot(stat='identity') + xlab('') + ylab('') + theme(legend.position='none',axis.title.x = element_blank()) + scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y"))  + ylab("") + xlab("") + theme(axis.title.x = element_blank(),axis.text.x = element_blank()) + background_grid(major = "xy",minor = "none")
if (nrow(input[!is.na(input$ma50),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma50),colour="green")
}
if (nrow(input[!is.na(input$ma21),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma21),color="red")
}
if (nrow(input[!is.na(input$ma9),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma9),colour="blue")
}
if (nrow(input[!is.na(input$up),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=up),color="purple") +
geom_line(aes(x=date,y=dn),color="purple")
}
p2 <- ggplot(input, aes(x=date, y=volume,fill=pos_neg)) + geom_bar(stat='identity') + ylab("") + xlab("") + scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y")) + theme(axis.title.x = element_blank(),axis.text.x = element_blank(),axis.title.y = element_text(margin = margin(r=-10))) + guides(fill=FALSE) + background_grid(major = "xy",minor = "none")
p3 <- ggplot() +
geom_line(data=input,aes(x=date,y=macd,color="red")) +
geom_line(data=input,aes(x=date,y=signal,color="blue")) +
scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y")) + guides(color=FALSE) + xlab("") + theme(axis.title.x = element_blank(),axis.text.x = element_blank()) + ylab("MACD") + background_grid(major = "xy",minor = "none")
p4 <- ggplot() +
geom_line(data=input,aes(x=date,y=RSI,color="red")) + guides(color=FALSE) + xlab("") + background_grid(major = "xy",minor = "none")
plot_grid(p1,p2,p3,p4,ncol=1,align='v', rel_heights = c(3, .5,.75,.75))
metrics <- data.frame(Metric = c("Gross Margin",
"Oper. Profit Margin",
"EBIT Margin",
"Return on Assets",
"Return on Equity",
"Return on Investment",
"Free Cash Flow/Share",
"Book Value/Share",
"Oper Cash Flow/Share",
"Asset Turnover",
"Inventory Turnover",
"Receivables Turnover",
"Current Ratio",
"LT Dept to Capital",
"Debt to Equity",
"Free Cash Flow",
"Total Revenue",
"COGS",
"Gross Profit",
"Operating Income",
"Operating Expenses",
"Employee Count"),
DF = c("","",""), stringsAsFactors = FALSE)
metrics <- data.frame(Metric = c("Gross Margin",
"Oper. Profit Margin",
"EBIT Margin",
"Return on Assets",
"Return on Equity",
"Return on Investment",
"Free Cash Flow/Share",
"Book Value/Share",
"Oper Cash Flow/Share",
"Asset Turnover",
"Inventory Turnover",
"Receivables Turnover",
"Current Ratio",
"LT Dept to Capital",
"Debt to Equity",
"Free Cash Flow",
"Total Revenue",
"COGS",
"Gross Profit",
"Operating Income",
"Operating Expenses",
"Employee Count"),
DF = c("","","","",
"","","","",
"","","","",
"","","","",
"","","","",
"",""), stringsAsFactors = FALSE)
View(metrics)
metrics <- data.frame(Metric = c("Gross Margin",
"Oper. Profit Margin",
"EBIT Margin",
"Return on Assets",
"Return on Equity",
"Return on Investment",
"Free Cash Flow/Share",
"Book Value/Share",
"Oper Cash Flow/Share",
"Asset Turnover",
"Inventory Turnover",
"Receivables Turnover",
"Current Ratio",
"LT Dept to Capital",
"Debt to Equity",
"Free Cash Flow",
"Total Revenue",
"COGS",
"Gross Profit",
"Operating Income",
"Operating Expenses",
"Employee Count"),
DF = c("g_gm","g_om","g_em","g_roa",
"g_roe","g_roi","g_fcf_sh","g_bv_sh",                    "g_ocf_sh","g_ato","g_into","g_recto",                  "g_curr","g_ltdebt_cap","g_debt_equity","",                "g_fcf","g_rev","g_cogs","g_gross_profit",
"g_oper_inc","g_oper_exp"), stringsAsFactors = FALSE)
metrics <- data.frame(Metric = c("Gross Margin",
"Oper. Profit Margin",
"EBIT Margin",
"Return on Assets",
"Return on Equity",
"Return on Investment",
"Free Cash Flow/Share",
"Book Value/Share",
"Oper Cash Flow/Share",
"Asset Turnover",
"Inventory Turnover",
"Receivables Turnover",
"Current Ratio",
"LT Dept to Capital",
"Debt to Equity",
"Free Cash Flow",
"Total Revenue",
"COGS",
"Gross Profit",
"Operating Income",
"Operating Expenses",
"Employee Count"),
DF = c("g_gm","g_om","g_em","g_roa",
"g_roe","g_roi","g_fcf_sh","g_bv_sh",                    "g_ocf_sh","g_ato","g_into","g_recto",                  "g_curr","g_ltdebt_cap","g_debt_equity",                "g_fcf","g_rev","g_cogs","g_gross_profit",                  "g_oper_inc","g_oper_exp","g_empl_cnt"), stringsAsFactors = FALSE)
x <- c("lol","foo","bar")
for (i in 1:length(x)){
print(i)
}
for (i in 1:length(x)){
print(x[i])
}
x <- c("g_gm","g_om","g_em")
for (i in 1:length(x)){
#     print(x[i])
x[i] <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=gross_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = gross_margin), linetype=2,alpha=0.8)
}
Quandl.api_key(" qSAUD4UYgpSUz_Bbxv6v")
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="AAPL")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="AAPL")
fundamentals_c <- fundamentals_c[fundamentals_c$per_type=="Q",]
fundamentals_r <- fundamentals_r[fundamentals_r$per_type=="Q",]
for (i in 1:length(x)){
#     print(x[i])
x[i] <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=gross_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = gross_margin), linetype=2,alpha=0.8)
}
for (i in 1:length(x)){
#     print(x[i])
x <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=gross_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = gross_margin), linetype=2,alpha=0.8)
}
x
x <- c("g_gm","g_om","g_em")
for (i in 1:length(x)){
#     print(x[i])
y <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=gross_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = gross_margin), linetype=2,alpha=0.8)
}
y
ggplot(data=fundamentals_r, aes(x=per_end_date,y=gross_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = gross_margin), linetype=2,alpha=0.8)
ggplot(data=fundamentals_r, aes(x=per_end_date,y=gross_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = gross_margin), linetype=2,alpha=0.8)
ggplot(data=fundamentals_r, aes(x=per_end_date,y=gross_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = gross_margin), linetype=2,alpha=0.8)
for (i in 1:length(x)){
#     print(x[i])
paste(y,i) <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=gross_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = gross_margin), linetype=2,alpha=0.8)
}
paste0(y,i) <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=gross_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = gross_margin), linetype=2,alpha=0.8)
}
for (i in 1:length(x)){
#     print(x[i])
paste0(y,i) <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=gross_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = gross_margin), linetype=2,alpha=0.8)
}
for (i in 1:length(x)){
#     print(x[i])
paste0("y",i) <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=gross_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = gross_margin), linetype=2,alpha=0.8)
}
for (i in 1:length(x)){
#     print(x[i])
y <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=gross_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = gross_margin), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
plot_list = list()
for (i in 1:length(x)){
#     print(x[i])
y <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=gross_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = gross_margin), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
plot_list[[1]]
plot_list[[2]]
plot_list[[3]]
x
plot_list = list()
for (i in 1:length(x)){
y <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=x[i]))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab(paste0(x[i])) + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = x[i]), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
plot_list[[1]]
View(fundamentals_r)
x <- c("gross_margin","oper_profit_margin","ebit_margin")
plot_list = list()
for (i in 1:length(x)){
y <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=x[i]))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab(paste0(x[i])) + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = x[i]), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
plot_list[[1]]
x[1]
ggplot(data=fundamentals_r, aes(x=per_end_date,y=x[i]))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab(paste0(x[i])) + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = x[i]), linetype=2,alpha=0.8)
ggplot(data=fundamentals_r, aes(x=per_end_date,y=gross_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = gross_margin), linetype=2,alpha=0.8)
x[i]
plot_list[[2]]
plot_list[[3]]
plot_list[1]
plot_list = list()
for (i in 1:length(x)){
y <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=paste0(x[i]))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab(paste0(x[i])) + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = paste0(x[i])), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
plot_list = list()
for (i in 1:length(x)){
y <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=paste0(x[i])+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab(paste0(x[i])) + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = paste0(x[i]), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
plot_list = list()
for (i in 1:length(x)){
y <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=paste0(x[i]))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab(paste0(x[i])) + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = paste0(x[i]), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
plot_list = list()
for (i in 1:length(x)){
y <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=paste0(x[i])))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab(paste0(x[i])) + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = paste0(x[i]), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
plot_list = list()
for (i in 1:length(x)){
y <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=x[i]))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab(paste0(x[i])) + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = x[i]), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
plot_list = list()
for (i in 1:length(x)){
metric <- x[i]
y <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=metric))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab(paste0(x[i])) + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = metric), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
plot_list[[1]]
metric
ggplot(data=fundamentals_r, aes(x=per_end_date,y=ebit_margin))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab("Gross Margin") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = ebit_margin), linetype=2,alpha=0.8)
#
plot_list = list()
for (i in 1:length(x)){
metric <- x[i]
y <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=metric))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + ylab(metric) + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = metric), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
plot_list[[1]]
plot_list = list()
for (i in 1:length(x)){
metric <- x[i]
y <-ggplot(data=fundamentals_r, aes(x=per_end_date,y=metric))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes(yintercept = metric), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
plot_list[[1]]
plot_list = list()
for (i in 1:length(x)){
metric <- x[i]
y <-ggplot(data=fundamentals_r, aes_string(x="per_end_date",y=metric))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes_string(yintercept = metric), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
plot_list[[1]]
length(plot_list)
do.call("grid.arrange", c(plot_list, ncol=nCol))
n <- length(plot_list)
nCol <- n
do.call("grid.arrange", c(plot_list, ncol=nCol))
n <- length(plot_list)
nCol <- n
do.call("grid.draw", c(plot_list, ncol=nCol))
library(grid)
n <- length(plot_list)
nCol <- n
do.call("grid.draw", c(plot_list, ncol=nCol))
plot_list
cowplot::plot_grid(plotlist = plot_list, ncol = 2)
cowplot::plot_grid(plotlist = plot_list, ncol = 1)
ticker <- "AAPL"
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker=ticker)
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker=ticker)
fundamentals_c <- fundamentals_c[fundamentals_c$per_type=="Q",]
fundamentals_r <- fundamentals_r[fundamentals_r$per_type=="Q",]
ticker <- "AAPL"
symbol <- "AAPL"
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker=symbol)
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker=symbol)
fundamentals_c <- fundamentals_c[fundamentals_c$per_type=="Q",]
fundamentals_r <- fundamentals_r[fundamentals_r$per_type=="Q",]
x <- "gross_margin"
plot_list = list()
for (i in 1:length(x)){
metric <- x[i]
y <-ggplot(data=fundamentals_r, aes_string(x="per_end_date",y=metric))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes_string(yintercept = metric), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
cowplot::plot_grid(plotlist = plot_list, ncol = 1)
symbol <- "AIG"
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker=symbol)
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker=symbol)
fundamentals_c <- fundamentals_c[fundamentals_c$per_type=="Q",]
fundamentals_r <- fundamentals_r[fundamentals_r$per_type=="Q",]
plot_list = list()
for (i in 1:length(x)){
metric <- x[i]
y <-ggplot(data=fundamentals_r, aes_string(x="per_end_date",y=metric))+
theme_minimal()+geom_line(color="black") + geom_point(color="blue")  + xlab("") + geom_point(data=fundamentals_r[nrow(fundamentals_r),], color="red", size=6, alpha=0.7) +
geom_hline(data =fundamentals_r[nrow(fundamentals_r),], aes_string(yintercept = metric), linetype=2,alpha=0.8)
plot_list[[i]] = y
}
cowplot::plot_grid(plotlist = plot_list, ncol = 1)
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="AIG")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="AIG")
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="AIG")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="AIG")
Quandl.api_key(" qSAUD4UYgpSUz_Bbxv6v")
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="AIG")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="AIG")
fundamentals_c <- fundamentals_c[fundamentals_c$per_type=="Q",]
fundamentals_r <- fundamentals_r[fundamentals_r$per_type=="Q",]
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker=AIG)
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="AIG")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="AIG")
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="AAPL")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="AAPL")
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="XOM")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="XOM")
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="AIG")
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="NOV")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="NOV")
Quandl.api_key("qSAUD4UYgpSUz_Bbxv6v")
symbol <- toupper(input$inText9)
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="NOV")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="NOV")
View(fundamentals)
quandl.ApiConfig.api_key = "qSAUD4UYgpSUz_Bbxv6v"
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="NOV")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="NOV")
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="GOOG")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="GOOG")
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="GOOGL")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="GOOGL")
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="AAPL")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="AAPL")
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="FB")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="FB")
Quandl.api_key("w8BRC-MZFDskMZoy7iyn")
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="FB")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="FB")
fundamentals_c = Quandl.datatable("ZACKS/FC", ticker="BA")
fundamentals_r = Quandl.datatable("ZACKS/FR", ticker="BA")
