input$fridays <- indx_fridays[match(open$index,indx_fridays)]
input$weekday <- ifelse(!is.na(input$mondays),1,
ifelse(!is.na(input$tuesdays),2,
ifelse(!is.na(input$wednesdays),3,
ifelse(!is.na(input$thursdays),4,
ifelse(!is.na(input$fridays),5,NA)))))
input$week_num <- NA
week = 0
try(for (i in 1:nrow(input)){
if(input$weekday[i]>input$weekday[i+1]){
week = week + 1
input$week_num[i+1] <- week
}  else {
input$week_num[i+1] <- week
}
},silent=FALSE)
input$week_num[1] <- input$week_num[2]
input %>% group_by(week_num) %>%
summarise(
size = n(),
date = first(date),
Open = first(Open),
Low = min(Low),
High = max(High),
Close = last(Close),
# adjusted = last(adjusted),
volume = sum(Volume)
) -> input
tickerQuery <- function(ticker,time_frame){
# ticker <- "AAPL"
getSymbols.google(ticker,env = globalenv())
input <- as.data.frame(get(ticker))
colnames(input) <- c("Open",
"High",
"Low",
"Close",
"Volume")
input <- input[!is.na(input$Close),]
input$date <- row.names(input)
if (time_frame=="Weekly"){
#reformat for weekly time frame
mondays = as.POSIXlt(input$date)$wday == 1
tuesdays = as.POSIXlt(input$date)$wday == 2
wednesdays = as.POSIXlt(input$date)$wday == 3
thursdays = as.POSIXlt(input$date)$wday == 4
fridays = as.POSIXlt(input$date)$wday == 5
indx_mondays <- c(0, which(mondays))
indx_tuesdays <- c(0, which(tuesdays))
indx_wednesdays <- c(0, which(wednesdays))
indx_thursdays <- c(0, which(thursdays))
indx_fridays <- c(0, which(fridays))
open <- as.data.frame(input[,1])
colnames(open) <- "open"
open$index = 1:nrow(open)
input$mondays <- indx_mondays[match(open$index,indx_mondays)]
input$tuesdays <- indx_tuesdays[match(open$index,indx_tuesdays)]
input$wednesdays <- indx_wednesdays[match(open$index,indx_wednesdays)]
input$thursdays <- indx_thursdays[match(open$index,indx_thursdays)]
input$fridays <- indx_fridays[match(open$index,indx_fridays)]
input$weekday <- ifelse(!is.na(input$mondays),1,
ifelse(!is.na(input$tuesdays),2,
ifelse(!is.na(input$wednesdays),3,
ifelse(!is.na(input$thursdays),4,
ifelse(!is.na(input$fridays),5,NA)))))
input$week_num <- NA
week = 0
try(for (i in 1:nrow(input)){
if(input$weekday[i]>input$weekday[i+1]){
week = week + 1
input$week_num[i+1] <- week
}  else {
input$week_num[i+1] <- week
}
},silent=FALSE)
#patch up
input$week_num[1] <- input$week_num[2]
input %>% group_by(week_num) %>%
summarise(
size = n(),
date = first(date),
Open = first(Open),
Low = min(Low),
High = max(High),
Close = last(Close),
# adjusted = last(adjusted),
volume = sum(Volume)
) -> input
}
#add technical indicators
try(input$ma50 <- SMA(input$Close,50),silent=TRUE)
try(input$ma21 <- SMA(input$Close,21),silent=TRUE)
try(input$ma9 <- SMA(input$Close,9),silent=TRUE)
try(bbands <- as.data.frame(BBands(input$Close, n=20,sd=2)),silent=TRUE)
try(bbands <- bbands[,c("up","dn")],silent = TRUE)
try(input <- cbind(input,bbands),silent = TRUE)
input$pos_neg <- ifelse(input$Close>lag(input$Close,1),"red","green")
try(input$RSI <- RSI(input$Close))
try(macd <- as.data.frame(MACD(input$Close)))
try(input <- cbind(input,macd),silent = TRUE)
try(input$macd_delt <- input$macd-input$signal)
return(input)
}
test2 <- tickerQuery("AAPL","Weekly")
View(test2)
input <- tickerQuery(ticker,"Daily")
ticker <- 'PANW'
input <- tickerQuery(ticker,"Daily")
View(input)
start_q <- '2015-01-01'
end_q <- '2017-08-10'
input <- input[input$date>=start_q &
input$date<=end_q,]
install.packages("tidyquant")
library(tidyquant)
install.packages("tidyquant")
install.packages("rJava")
devtools::install_github("business-science/tidyquant")
library(tidyquant)
install.packages("rJava")
library(tidyquant)
devtools::install_github("business-science/tidyquant")
install.packages("bdscale")
input <- tickerQuery(ticker,"Daily")
input <- input[input$date>=input$start_q &
input$input$date<=end_q,]
input <- tickerQuery(ticker,"Daily")
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=high, lower=pmin(Open,Close),
upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) +
geom_boxplot(stat='identity') +
# theme_dark() +
ggtitle(paste0(ticker,": Daily")) +
xlab('') +
ylab('') +
theme(legend.position='none') +
scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y"))
library(ggplot)
library(ggplot2)
library(bdscale)
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=high, lower=pmin(Open,Close),
upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) +
geom_boxplot(stat='identity') +
# theme_dark() +
ggtitle(paste0(ticker,": Daily")) +
xlab('') +
ylab('') +
theme(legend.position='none') +
scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y"))
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=high, lower=pmin(Open,Close),
upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) +
geom_boxplot(stat='identity') +
# theme_dark() +
ggtitle(paste0(ticker,": Daily")) +
xlab('') +
ylab('')
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=high, lower=pmin(Open,Close),
upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) +
geom_boxplot(stat='identity') +
# theme_dark() +
ggtitle(paste0(ticker,": Daily")) +
xlab('') +
ylab('') +
theme(legend.position='none')
View(input)
p1 <- ggplot(input, aes(x=date, ymin=low, ymax=high, lower=pmin(open,close),
upper=pmax(open,close), fill=pos_neg, group=1, middle=pmin(open,close))) +
geom_boxplot(stat='identity') +
# theme_dark() +
ggtitle(paste0(ticker,": Daily")) +
xlab('') +
ylab('') +
theme(legend.position='none')
p1
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=high, lower=pmin(Open,Close),
upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) +
geom_boxplot(stat='identity') +
# theme_dark() +
ggtitle(paste0(ticker,": Daily")) +
xlab('') +
ylab('') +
theme(legend.position='none')
p1
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=High, lower=pmin(Open,Close),
upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) +
geom_boxplot(stat='identity') +
# theme_dark() +
ggtitle(paste0(ticker,": Daily")) +
xlab('') +
ylab('') +
theme(legend.position='none')
p1
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=High, lower=pmin(Open,Close),
upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) +
geom_boxplot(stat='identity') +
# theme_dark() +
ggtitle(paste0(ticker,": Daily")) +
xlab('') +
ylab('') +
theme(legend.position='none') +
scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y"))
input$date
str(input)
input$date <- as.Date(input$date)
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=High, lower=pmin(Open,Close),
upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) +
geom_boxplot(stat='identity') +
# theme_dark() +
ggtitle(paste0(ticker,": Daily")) +
xlab('') +
ylab('') +
theme(legend.position='none') +
scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y"))
p1
input <- tickerQuery(ticker,"Weekly")
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=High, lower=pmin(Open,Close),
upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) +
geom_boxplot(stat='identity') +
# theme_dark() +
ggtitle(paste0(ticker,": Daily")) +
xlab('') +
ylab('') +
theme(legend.position='none') +
scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y"))
tickerQuery <- function(ticker,time_frame){
# ticker <- "AAPL"
getSymbols.google(ticker,env = globalenv())
input <- as.data.frame(get(ticker))
colnames(input) <- c("Open",
"High",
"Low",
"Close",
"Volume")
input <- input[!is.na(input$Close),]
input$date <- row.names(input)
if (time_frame=="Weekly"){
#reformat for weekly time frame
mondays = as.POSIXlt(input$date)$wday == 1
tuesdays = as.POSIXlt(input$date)$wday == 2
wednesdays = as.POSIXlt(input$date)$wday == 3
thursdays = as.POSIXlt(input$date)$wday == 4
fridays = as.POSIXlt(input$date)$wday == 5
indx_mondays <- c(0, which(mondays))
indx_tuesdays <- c(0, which(tuesdays))
indx_wednesdays <- c(0, which(wednesdays))
indx_thursdays <- c(0, which(thursdays))
indx_fridays <- c(0, which(fridays))
open <- as.data.frame(input[,1])
colnames(open) <- "open"
open$index = 1:nrow(open)
input$mondays <- indx_mondays[match(open$index,indx_mondays)]
input$tuesdays <- indx_tuesdays[match(open$index,indx_tuesdays)]
input$wednesdays <- indx_wednesdays[match(open$index,indx_wednesdays)]
input$thursdays <- indx_thursdays[match(open$index,indx_thursdays)]
input$fridays <- indx_fridays[match(open$index,indx_fridays)]
input$weekday <- ifelse(!is.na(input$mondays),1,
ifelse(!is.na(input$tuesdays),2,
ifelse(!is.na(input$wednesdays),3,
ifelse(!is.na(input$thursdays),4,
ifelse(!is.na(input$fridays),5,NA)))))
input$week_num <- NA
week = 0
try(for (i in 1:nrow(input)){
if(input$weekday[i]>input$weekday[i+1]){
week = week + 1
input$week_num[i+1] <- week
}  else {
input$week_num[i+1] <- week
}
},silent=FALSE)
#patch up
input$week_num[1] <- input$week_num[2]
input %>% group_by(week_num) %>%
summarise(
size = n(),
date = first(date),
Open = first(Open),
Low = min(Low),
High = max(High),
Close = last(Close),
# adjusted = last(adjusted),
volume = sum(Volume)
) -> input
}
#add technical indicators
try(input$ma50 <- SMA(input$Close,50),silent=TRUE)
try(input$ma21 <- SMA(input$Close,21),silent=TRUE)
try(input$ma9 <- SMA(input$Close,9),silent=TRUE)
try(bbands <- as.data.frame(BBands(input$Close, n=20,sd=2)),silent=TRUE)
try(bbands <- bbands[,c("up","dn")],silent = TRUE)
try(input <- cbind(input,bbands),silent = TRUE)
input$pos_neg <- ifelse(input$Close>lag(input$Close,1),"red","green")
try(input$RSI <- RSI(input$Close))
try(macd <- as.data.frame(MACD(input$Close)))
try(input <- cbind(input,macd),silent = TRUE)
try(input$macd_delt <- input$macd-input$signal)
input$date <- as.Date(input$date)
return(input)
}
input <- tickerQuery(ticker,"Weekly")
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=High, lower=pmin(Open,Close),
upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) +
geom_boxplot(stat='identity') +
# theme_dark() +
ggtitle(paste0(ticker,": Daily")) +
xlab('') +
ylab('') +
theme(legend.position='none') +
scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y"))
p1
ticker <- 'BX'
input <- tickerQuery(ticker,"Weekly")
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=High, lower=pmin(Open,Close),
upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) +
geom_boxplot(stat='identity') +
# theme_dark() +
ggtitle(paste0(ticker,": Daily")) +
xlab('') +
ylab('') +
theme(legend.position='none') +
scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y"))
p1
input <- tickerQuery(ticker,"Daily")
input <- tickerQuery(ticker,"Daily")
input <- input[input$date>=start_q &
input$date<=end_q,]
input <- tickerQuery(ticker,"Daily")
input <- input[input$date>=start_q &
input$date<=end_q,]
input <- tickerQuery(ticker,"Daily")
input <- input[input$date>=start_q &
input$date<=end_q,]
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=High, lower=pmin(Open,Close), upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) + geom_boxplot(stat='identity') + xlab('') + ylab('') + theme(legend.position='none',axis.title.x = element_blank()) + scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y"))  + ylab("") + xlab("") + theme(axis.title.x = element_blank(),axis.text.x = element_blank()) + background_grid(major = "xy",minor = "none")
library(cowplot)
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=High, lower=pmin(Open,Close), upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) + geom_boxplot(stat='identity') + xlab('') + ylab('') + theme(legend.position='none',axis.title.x = element_blank()) + scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y"))  + ylab("") + xlab("") + theme(axis.title.x = element_blank(),axis.text.x = element_blank()) + background_grid(major = "xy",minor = "none")
p1
if (nrow(input[!is.na(input$ma50),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma50),colour="green")
}
if (nrow(input[!is.na(input$ma21),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma21),color="red")
}
if (nrow(input[!is.na(input$ma9),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma9),colour="blue")
}
if (nrow(input[!is.na(input$up),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=up),color="purple") +
geom_line(aes(x=date,y=dn),color="purple")
}
p1
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=High, lower=pmin(Open,Close), upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) + geom_boxplot(stat='identity') + xlab('') + ylab('') + theme(legend.position='none',axis.title.x = element_blank()) + scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y"))  + ylab("") + xlab("") + theme(axis.title.x = element_blank(),axis.text.x = element_blank()) + background_grid(major = "xy",minor = "none")
## ADD TECHNICAL INDICATORS
if (nrow(input[!is.na(input$ma50),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma50),colour="green")
}
if (nrow(input[!is.na(input$ma21),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma21),color="red")
}
if (nrow(input[!is.na(input$ma9),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma9),colour="blue")
}
if (nrow(input[!is.na(input$up),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=up),color="purple") +
geom_line(aes(x=date,y=dn),color="purple")
}
p2 <- ggplot(input, aes(x=date, y=Volume,fill=pos_neg)) + geom_bar(stat='identity') + ylab("") + xlab("") + scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y")) + theme(axis.title.x = element_blank(),axis.text.x = element_blank(),axis.title.y = element_text(margin = margin(r=-10))) + guides(fill=FALSE) + background_grid(major = "xy",minor = "none")
p3 <- ggplot() +
geom_line(data=input,aes(x=date,y=macd,color="red")) +
geom_line(data=input,aes(x=date,y=signal,color="blue")) +
scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y")) + guides(color=FALSE) + xlab("") + theme(axis.title.x = element_blank(),axis.text.x = element_blank()) + ylab("MACD") + background_grid(major = "xy",minor = "none")
# grid.arrange(p1,p2,heights=c(4/5,1/5))
p4 <- ggplot() +
geom_line(data=input,aes(x=date,y=RSI,color="red")) + guides(color=FALSE) + xlab("") + background_grid(major = "xy",minor = "none")
plot_grid(p1,p2,p3,p4,ncol=1,align='v', rel_heights = c(3, .5,.75,.75))
input <- tickerQuery(ticker,"Weekly")
input <- input[input$date>=start_q &
input$date<=end_q,]
#VOLATILITY
# input$log_ret <- log10(input$adjusted/lag(input$adjusted,1))
# input$volatility <- input$log_ret
# library(TTR)
# input$volatility <- runSD(input$log_ret,252)*sqrt(252)
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=High, lower=pmin(Open,Close), upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) + geom_boxplot(stat='identity') + xlab('') + ylab('') + theme(legend.position='none',axis.title.x = element_blank()) + scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y"))  + ylab("") + xlab("") + theme(axis.title.x = element_blank(),axis.text.x = element_blank()) + background_grid(major = "xy",minor = "none")
## ADD TECHNICAL INDICATORS
if (nrow(input[!is.na(input$ma50),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma50),colour="green")
}
if (nrow(input[!is.na(input$ma21),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma21),color="red")
}
if (nrow(input[!is.na(input$ma9),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma9),colour="blue")
}
if (nrow(input[!is.na(input$up),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=up),color="purple") +
geom_line(aes(x=date,y=dn),color="purple")
}
p2 <- ggplot(input, aes(x=date, y=Volume,fill=pos_neg)) + geom_bar(stat='identity') + ylab("") + xlab("") + scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y")) + theme(axis.title.x = element_blank(),axis.text.x = element_blank(),axis.title.y = element_text(margin = margin(r=-10))) + guides(fill=FALSE) + background_grid(major = "xy",minor = "none")
p3 <- ggplot() +
geom_line(data=input,aes(x=date,y=macd,color="red")) +
geom_line(data=input,aes(x=date,y=signal,color="blue")) +
scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y")) + guides(color=FALSE) + xlab("") + theme(axis.title.x = element_blank(),axis.text.x = element_blank()) + ylab("MACD") + background_grid(major = "xy",minor = "none")
# grid.arrange(p1,p2,heights=c(4/5,1/5))
p4 <- ggplot() +
geom_line(data=input,aes(x=date,y=RSI,color="red")) + guides(color=FALSE) + xlab("") + background_grid(major = "xy",minor = "none")
plot_grid(p1,p2,p3,p4,ncol=1,align='v', rel_heights = c(3, .5,.75,.75))
## Define Functions - Ticker Query
tickerQuery <- function(ticker,time_frame){
# ticker <- "AAPL"
getSymbols.google(ticker,env = globalenv())
input <- as.data.frame(get(ticker))
colnames(input) <- c("Open",
"High",
"Low",
"Close",
"Volume")
input <- input[!is.na(input$Close),]
input$date <- row.names(input)
if (time_frame=="Weekly"){
#reformat for weekly time frame
mondays = as.POSIXlt(input$date)$wday == 1
tuesdays = as.POSIXlt(input$date)$wday == 2
wednesdays = as.POSIXlt(input$date)$wday == 3
thursdays = as.POSIXlt(input$date)$wday == 4
fridays = as.POSIXlt(input$date)$wday == 5
indx_mondays <- c(0, which(mondays))
indx_tuesdays <- c(0, which(tuesdays))
indx_wednesdays <- c(0, which(wednesdays))
indx_thursdays <- c(0, which(thursdays))
indx_fridays <- c(0, which(fridays))
open <- as.data.frame(input[,1])
colnames(open) <- "open"
open$index = 1:nrow(open)
input$mondays <- indx_mondays[match(open$index,indx_mondays)]
input$tuesdays <- indx_tuesdays[match(open$index,indx_tuesdays)]
input$wednesdays <- indx_wednesdays[match(open$index,indx_wednesdays)]
input$thursdays <- indx_thursdays[match(open$index,indx_thursdays)]
input$fridays <- indx_fridays[match(open$index,indx_fridays)]
input$weekday <- ifelse(!is.na(input$mondays),1,
ifelse(!is.na(input$tuesdays),2,
ifelse(!is.na(input$wednesdays),3,
ifelse(!is.na(input$thursdays),4,
ifelse(!is.na(input$fridays),5,NA)))))
input$week_num <- NA
week = 0
try(for (i in 1:nrow(input)){
if(input$weekday[i]>input$weekday[i+1]){
week = week + 1
input$week_num[i+1] <- week
}  else {
input$week_num[i+1] <- week
}
},silent=FALSE)
#patch up
input$week_num[1] <- input$week_num[2]
input %>% group_by(week_num) %>%
summarise(
size = n(),
date = first(date),
Open = first(Open),
Low = min(Low),
High = max(High),
Close = last(Close),
# adjusted = last(adjusted),
Volume = sum(Volume)
) -> input
}
#add technical indicators
try(input$ma50 <- SMA(input$Close,50),silent=TRUE)
try(input$ma21 <- SMA(input$Close,21),silent=TRUE)
try(input$ma9 <- SMA(input$Close,9),silent=TRUE)
try(bbands <- as.data.frame(BBands(input$Close, n=20,sd=2)),silent=TRUE)
try(bbands <- bbands[,c("up","dn")],silent = TRUE)
try(input <- cbind(input,bbands),silent = TRUE)
input$pos_neg <- ifelse(input$Close>lag(input$Close,1),"red","green")
try(input$RSI <- RSI(input$Close))
try(macd <- as.data.frame(MACD(input$Close)))
try(input <- cbind(input,macd),silent = TRUE)
try(input$macd_delt <- input$macd-input$signal)
input$date <- as.Date(input$date)
return(input)
}
input <- tickerQuery(ticker,"Weekly")
input <- input[input$date>=start_q &
input$date<=end_q,]
#VOLATILITY
# input$log_ret <- log10(input$adjusted/lag(input$adjusted,1))
# input$volatility <- input$log_ret
# library(TTR)
# input$volatility <- runSD(input$log_ret,252)*sqrt(252)
p1 <- ggplot(input, aes(x=date, ymin=Low, ymax=High, lower=pmin(Open,Close), upper=pmax(Open,Close), fill=pos_neg, group=1, middle=pmin(Open,Close))) + geom_boxplot(stat='identity') + xlab('') + ylab('') + theme(legend.position='none',axis.title.x = element_blank()) + scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y"))  + ylab("") + xlab("") + theme(axis.title.x = element_blank(),axis.text.x = element_blank()) + background_grid(major = "xy",minor = "none")
## ADD TECHNICAL INDICATORS
if (nrow(input[!is.na(input$ma50),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma50),colour="green")
}
if (nrow(input[!is.na(input$ma21),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma21),color="red")
}
if (nrow(input[!is.na(input$ma9),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=ma9),colour="blue")
}
if (nrow(input[!is.na(input$up),]) > 0){
p1 <- p1 + geom_line(aes(x=date,y=up),color="purple") +
geom_line(aes(x=date,y=dn),color="purple")
}
p2 <- ggplot(input, aes(x=date, y=Volume,fill=pos_neg)) + geom_bar(stat='identity') + ylab("") + xlab("") + scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y")) + theme(axis.title.x = element_blank(),axis.text.x = element_blank(),axis.title.y = element_text(margin = margin(r=-10))) + guides(fill=FALSE) + background_grid(major = "xy",minor = "none")
p3 <- ggplot() +
geom_line(data=input,aes(x=date,y=macd,color="red")) +
geom_line(data=input,aes(x=date,y=signal,color="blue")) +
scale_x_bd(business.dates=input$date, max.major.breaks=10, labels=date_format("%b '%y")) + guides(color=FALSE) + xlab("") + theme(axis.title.x = element_blank(),axis.text.x = element_blank()) + ylab("MACD") + background_grid(major = "xy",minor = "none")
# grid.arrange(p1,p2,heights=c(4/5,1/5))
p4 <- ggplot() +
geom_line(data=input,aes(x=date,y=RSI,color="red")) + guides(color=FALSE) + xlab("") + background_grid(major = "xy",minor = "none")
plot_grid(p1,p2,p3,p4,ncol=1,align='v', rel_heights = c(3, .5,.75,.75))
